/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var electrious_models_racking_pb = require('../../../electrious/models/racking_pb.js');
goog.object.extend(proto, electrious_models_racking_pb);
var electrious_workers_racking_request_pb = require('../../../electrious/workers/racking/request_pb.js');
goog.object.extend(proto, electrious_workers_racking_request_pb);
goog.exportSymbol('proto.electrious.api.v1.DoRackRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.DoRackResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.UpdateRackingRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.UpdateRackingResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.UpdateRackingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.UpdateRackingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.UpdateRackingRequest.displayName = 'proto.electrious.api.v1.UpdateRackingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.UpdateRackingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.UpdateRackingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.UpdateRackingResponse.displayName = 'proto.electrious.api.v1.UpdateRackingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.DoRackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.DoRackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.DoRackRequest.displayName = 'proto.electrious.api.v1.DoRackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.DoRackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.DoRackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.DoRackResponse.displayName = 'proto.electrious.api.v1.DoRackResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.UpdateRackingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.UpdateRackingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.UpdateRackingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.UpdateRackingRequest.toObject = function(includeInstance, msg) {
  var obj = {
    request: (f = msg.getRequest()) && electrious_workers_racking_request_pb.Request.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.UpdateRackingRequest}
 */
proto.electrious.api.v1.UpdateRackingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.UpdateRackingRequest;
  return proto.electrious.api.v1.UpdateRackingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.UpdateRackingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.UpdateRackingRequest}
 */
proto.electrious.api.v1.UpdateRackingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_workers_racking_request_pb.Request;
      reader.readMessage(value,electrious_workers_racking_request_pb.Request.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.UpdateRackingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.UpdateRackingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.UpdateRackingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.UpdateRackingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_workers_racking_request_pb.Request.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.workers.racking.Request request = 1;
 * @return {?proto.electrious.workers.racking.Request}
 */
proto.electrious.api.v1.UpdateRackingRequest.prototype.getRequest = function() {
  return /** @type{?proto.electrious.workers.racking.Request} */ (
    jspb.Message.getWrapperField(this, electrious_workers_racking_request_pb.Request, 1));
};


/** @param {?proto.electrious.workers.racking.Request|undefined} value */
proto.electrious.api.v1.UpdateRackingRequest.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.UpdateRackingRequest.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.UpdateRackingRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.UpdateRackingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.UpdateRackingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.UpdateRackingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.UpdateRackingResponse.toObject = function(includeInstance, msg) {
  var obj = {
    racking: (f = msg.getRacking()) && electrious_models_racking_pb.Racking.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.UpdateRackingResponse}
 */
proto.electrious.api.v1.UpdateRackingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.UpdateRackingResponse;
  return proto.electrious.api.v1.UpdateRackingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.UpdateRackingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.UpdateRackingResponse}
 */
proto.electrious.api.v1.UpdateRackingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_racking_pb.Racking;
      reader.readMessage(value,electrious_models_racking_pb.Racking.deserializeBinaryFromReader);
      msg.setRacking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.UpdateRackingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.UpdateRackingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.UpdateRackingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.UpdateRackingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRacking();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_models_racking_pb.Racking.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.models.Racking racking = 1;
 * @return {?proto.electrious.models.Racking}
 */
proto.electrious.api.v1.UpdateRackingResponse.prototype.getRacking = function() {
  return /** @type{?proto.electrious.models.Racking} */ (
    jspb.Message.getWrapperField(this, electrious_models_racking_pb.Racking, 1));
};


/** @param {?proto.electrious.models.Racking|undefined} value */
proto.electrious.api.v1.UpdateRackingResponse.prototype.setRacking = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.UpdateRackingResponse.prototype.clearRacking = function() {
  this.setRacking(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.UpdateRackingResponse.prototype.hasRacking = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.DoRackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.DoRackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.DoRackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DoRackRequest.toObject = function(includeInstance, msg) {
  var obj = {
    request: (f = msg.getRequest()) && electrious_workers_racking_request_pb.RackRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.DoRackRequest}
 */
proto.electrious.api.v1.DoRackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.DoRackRequest;
  return proto.electrious.api.v1.DoRackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.DoRackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.DoRackRequest}
 */
proto.electrious.api.v1.DoRackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_workers_racking_request_pb.RackRequest;
      reader.readMessage(value,electrious_workers_racking_request_pb.RackRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.DoRackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.DoRackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.DoRackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DoRackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_workers_racking_request_pb.RackRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.workers.racking.RackRequest request = 1;
 * @return {?proto.electrious.workers.racking.RackRequest}
 */
proto.electrious.api.v1.DoRackRequest.prototype.getRequest = function() {
  return /** @type{?proto.electrious.workers.racking.RackRequest} */ (
    jspb.Message.getWrapperField(this, electrious_workers_racking_request_pb.RackRequest, 1));
};


/** @param {?proto.electrious.workers.racking.RackRequest|undefined} value */
proto.electrious.api.v1.DoRackRequest.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.DoRackRequest.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.DoRackRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.DoRackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.DoRackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.DoRackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DoRackResponse.toObject = function(includeInstance, msg) {
  var obj = {
    racking: (f = msg.getRacking()) && electrious_models_racking_pb.RackingSystem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.DoRackResponse}
 */
proto.electrious.api.v1.DoRackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.DoRackResponse;
  return proto.electrious.api.v1.DoRackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.DoRackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.DoRackResponse}
 */
proto.electrious.api.v1.DoRackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_racking_pb.RackingSystem;
      reader.readMessage(value,electrious_models_racking_pb.RackingSystem.deserializeBinaryFromReader);
      msg.setRacking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.DoRackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.DoRackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.DoRackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DoRackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRacking();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_models_racking_pb.RackingSystem.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.models.RackingSystem racking = 1;
 * @return {?proto.electrious.models.RackingSystem}
 */
proto.electrious.api.v1.DoRackResponse.prototype.getRacking = function() {
  return /** @type{?proto.electrious.models.RackingSystem} */ (
    jspb.Message.getWrapperField(this, electrious_models_racking_pb.RackingSystem, 1));
};


/** @param {?proto.electrious.models.RackingSystem|undefined} value */
proto.electrious.api.v1.DoRackResponse.prototype.setRacking = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.DoRackResponse.prototype.clearRacking = function() {
  this.setRacking(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.DoRackResponse.prototype.hasRacking = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.electrious.api.v1);
