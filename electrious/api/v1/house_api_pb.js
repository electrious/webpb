/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var electrious_models_geometry_latlng_pb = require('../../../electrious/models/geometry/latlng_pb.js');
goog.object.extend(proto, electrious_models_geometry_latlng_pb);
var electrious_models_house_house_pb = require('../../../electrious/models/house/house_pb.js');
goog.object.extend(proto, electrious_models_house_house_pb);
var electrious_models_house_state_state_pb = require('../../../electrious/models/house/state/state_pb.js');
goog.object.extend(proto, electrious_models_house_state_state_pb);
goog.exportSymbol('proto.electrious.api.v1.CreateHouseRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.CreateHouseResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.DetectHousesRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.DetectHousesResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.DetectedAreaRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.DetectedAreaResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.ListHouseStatesRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.ListHouseStatesResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.SearchHousesRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.SearchHousesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.DetectedAreaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.DetectedAreaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.DetectedAreaRequest.displayName = 'proto.electrious.api.v1.DetectedAreaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.DetectedAreaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.DetectedAreaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.DetectedAreaResponse.displayName = 'proto.electrious.api.v1.DetectedAreaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.DetectHousesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.DetectHousesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.DetectHousesRequest.displayName = 'proto.electrious.api.v1.DetectHousesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.DetectHousesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.DetectHousesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.DetectHousesResponse.displayName = 'proto.electrious.api.v1.DetectHousesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.ListHouseStatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.electrious.api.v1.ListHouseStatesRequest.repeatedFields_, null);
};
goog.inherits(proto.electrious.api.v1.ListHouseStatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.ListHouseStatesRequest.displayName = 'proto.electrious.api.v1.ListHouseStatesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.ListHouseStatesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.electrious.api.v1.ListHouseStatesResponse.repeatedFields_, null);
};
goog.inherits(proto.electrious.api.v1.ListHouseStatesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.ListHouseStatesResponse.displayName = 'proto.electrious.api.v1.ListHouseStatesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.SearchHousesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.SearchHousesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.SearchHousesRequest.displayName = 'proto.electrious.api.v1.SearchHousesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.SearchHousesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.electrious.api.v1.SearchHousesResponse.repeatedFields_, null);
};
goog.inherits(proto.electrious.api.v1.SearchHousesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.SearchHousesResponse.displayName = 'proto.electrious.api.v1.SearchHousesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.CreateHouseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.CreateHouseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.CreateHouseRequest.displayName = 'proto.electrious.api.v1.CreateHouseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.CreateHouseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.CreateHouseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.CreateHouseResponse.displayName = 'proto.electrious.api.v1.CreateHouseResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.DetectedAreaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.DetectedAreaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.DetectedAreaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DetectedAreaRequest.toObject = function(includeInstance, msg) {
  var obj = {
    point: (f = msg.getPoint()) && electrious_models_geometry_latlng_pb.LatLng.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.DetectedAreaRequest}
 */
proto.electrious.api.v1.DetectedAreaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.DetectedAreaRequest;
  return proto.electrious.api.v1.DetectedAreaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.DetectedAreaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.DetectedAreaRequest}
 */
proto.electrious.api.v1.DetectedAreaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_geometry_latlng_pb.LatLng;
      reader.readMessage(value,electrious_models_geometry_latlng_pb.LatLng.deserializeBinaryFromReader);
      msg.setPoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.DetectedAreaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.DetectedAreaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.DetectedAreaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DetectedAreaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_models_geometry_latlng_pb.LatLng.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.models.geometry.LatLng point = 1;
 * @return {?proto.electrious.models.geometry.LatLng}
 */
proto.electrious.api.v1.DetectedAreaRequest.prototype.getPoint = function() {
  return /** @type{?proto.electrious.models.geometry.LatLng} */ (
    jspb.Message.getWrapperField(this, electrious_models_geometry_latlng_pb.LatLng, 1));
};


/** @param {?proto.electrious.models.geometry.LatLng|undefined} value */
proto.electrious.api.v1.DetectedAreaRequest.prototype.setPoint = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.DetectedAreaRequest.prototype.clearPoint = function() {
  this.setPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.DetectedAreaRequest.prototype.hasPoint = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.DetectedAreaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.DetectedAreaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.DetectedAreaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DetectedAreaResponse.toObject = function(includeInstance, msg) {
  var obj = {
    detected: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.DetectedAreaResponse}
 */
proto.electrious.api.v1.DetectedAreaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.DetectedAreaResponse;
  return proto.electrious.api.v1.DetectedAreaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.DetectedAreaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.DetectedAreaResponse}
 */
proto.electrious.api.v1.DetectedAreaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDetected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.DetectedAreaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.DetectedAreaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.DetectedAreaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DetectedAreaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetected();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool detected = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.electrious.api.v1.DetectedAreaResponse.prototype.getDetected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.electrious.api.v1.DetectedAreaResponse.prototype.setDetected = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.DetectHousesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.DetectHousesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.DetectHousesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DetectHousesRequest.toObject = function(includeInstance, msg) {
  var obj = {
    point: (f = msg.getPoint()) && electrious_models_geometry_latlng_pb.LatLng.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.DetectHousesRequest}
 */
proto.electrious.api.v1.DetectHousesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.DetectHousesRequest;
  return proto.electrious.api.v1.DetectHousesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.DetectHousesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.DetectHousesRequest}
 */
proto.electrious.api.v1.DetectHousesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_geometry_latlng_pb.LatLng;
      reader.readMessage(value,electrious_models_geometry_latlng_pb.LatLng.deserializeBinaryFromReader);
      msg.setPoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.DetectHousesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.DetectHousesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.DetectHousesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DetectHousesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_models_geometry_latlng_pb.LatLng.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.models.geometry.LatLng point = 1;
 * @return {?proto.electrious.models.geometry.LatLng}
 */
proto.electrious.api.v1.DetectHousesRequest.prototype.getPoint = function() {
  return /** @type{?proto.electrious.models.geometry.LatLng} */ (
    jspb.Message.getWrapperField(this, electrious_models_geometry_latlng_pb.LatLng, 1));
};


/** @param {?proto.electrious.models.geometry.LatLng|undefined} value */
proto.electrious.api.v1.DetectHousesRequest.prototype.setPoint = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.DetectHousesRequest.prototype.clearPoint = function() {
  this.setPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.DetectHousesRequest.prototype.hasPoint = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.DetectHousesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.DetectHousesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.DetectHousesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DetectHousesResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.DetectHousesResponse}
 */
proto.electrious.api.v1.DetectHousesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.DetectHousesResponse;
  return proto.electrious.api.v1.DetectHousesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.DetectHousesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.DetectHousesResponse}
 */
proto.electrious.api.v1.DetectHousesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.DetectHousesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.DetectHousesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.DetectHousesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DetectHousesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.electrious.api.v1.ListHouseStatesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.ListHouseStatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.ListHouseStatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.ListHouseStatesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListHouseStatesRequest.toObject = function(includeInstance, msg) {
  var obj = {
    idsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.ListHouseStatesRequest}
 */
proto.electrious.api.v1.ListHouseStatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.ListHouseStatesRequest;
  return proto.electrious.api.v1.ListHouseStatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.ListHouseStatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.ListHouseStatesRequest}
 */
proto.electrious.api.v1.ListHouseStatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setIdsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.ListHouseStatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.ListHouseStatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.ListHouseStatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListHouseStatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 ids = 1;
 * @return {!Array<number>}
 */
proto.electrious.api.v1.ListHouseStatesRequest.prototype.getIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<number>} value */
proto.electrious.api.v1.ListHouseStatesRequest.prototype.setIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.electrious.api.v1.ListHouseStatesRequest.prototype.addIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.electrious.api.v1.ListHouseStatesRequest.prototype.clearIdsList = function() {
  this.setIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.electrious.api.v1.ListHouseStatesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.ListHouseStatesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.ListHouseStatesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.ListHouseStatesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListHouseStatesResponse.toObject = function(includeInstance, msg) {
  var obj = {
    houseStatesList: jspb.Message.toObjectList(msg.getHouseStatesList(),
    electrious_models_house_state_state_pb.States.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.ListHouseStatesResponse}
 */
proto.electrious.api.v1.ListHouseStatesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.ListHouseStatesResponse;
  return proto.electrious.api.v1.ListHouseStatesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.ListHouseStatesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.ListHouseStatesResponse}
 */
proto.electrious.api.v1.ListHouseStatesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_house_state_state_pb.States;
      reader.readMessage(value,electrious_models_house_state_state_pb.States.deserializeBinaryFromReader);
      msg.addHouseStates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.ListHouseStatesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.ListHouseStatesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.ListHouseStatesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListHouseStatesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouseStatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      electrious_models_house_state_state_pb.States.serializeBinaryToWriter
    );
  }
};


/**
 * repeated electrious.models.house.state.States house_states = 1;
 * @return {!Array<!proto.electrious.models.house.state.States>}
 */
proto.electrious.api.v1.ListHouseStatesResponse.prototype.getHouseStatesList = function() {
  return /** @type{!Array<!proto.electrious.models.house.state.States>} */ (
    jspb.Message.getRepeatedWrapperField(this, electrious_models_house_state_state_pb.States, 1));
};


/** @param {!Array<!proto.electrious.models.house.state.States>} value */
proto.electrious.api.v1.ListHouseStatesResponse.prototype.setHouseStatesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.electrious.models.house.state.States=} opt_value
 * @param {number=} opt_index
 * @return {!proto.electrious.models.house.state.States}
 */
proto.electrious.api.v1.ListHouseStatesResponse.prototype.addHouseStates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.electrious.models.house.state.States, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.electrious.api.v1.ListHouseStatesResponse.prototype.clearHouseStatesList = function() {
  this.setHouseStatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.SearchHousesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.SearchHousesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.SearchHousesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.SearchHousesRequest.toObject = function(includeInstance, msg) {
  var obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.SearchHousesRequest}
 */
proto.electrious.api.v1.SearchHousesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.SearchHousesRequest;
  return proto.electrious.api.v1.SearchHousesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.SearchHousesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.SearchHousesRequest}
 */
proto.electrious.api.v1.SearchHousesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.SearchHousesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.SearchHousesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.SearchHousesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.SearchHousesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.electrious.api.v1.SearchHousesRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.electrious.api.v1.SearchHousesRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.electrious.api.v1.SearchHousesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.SearchHousesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.SearchHousesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.SearchHousesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.SearchHousesResponse.toObject = function(includeInstance, msg) {
  var obj = {
    housesList: jspb.Message.toObjectList(msg.getHousesList(),
    electrious_models_house_house_pb.HouseSearch.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.SearchHousesResponse}
 */
proto.electrious.api.v1.SearchHousesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.SearchHousesResponse;
  return proto.electrious.api.v1.SearchHousesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.SearchHousesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.SearchHousesResponse}
 */
proto.electrious.api.v1.SearchHousesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_house_house_pb.HouseSearch;
      reader.readMessage(value,electrious_models_house_house_pb.HouseSearch.deserializeBinaryFromReader);
      msg.addHouses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.SearchHousesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.SearchHousesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.SearchHousesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.SearchHousesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHousesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      electrious_models_house_house_pb.HouseSearch.serializeBinaryToWriter
    );
  }
};


/**
 * repeated electrious.models.house.HouseSearch houses = 1;
 * @return {!Array<!proto.electrious.models.house.HouseSearch>}
 */
proto.electrious.api.v1.SearchHousesResponse.prototype.getHousesList = function() {
  return /** @type{!Array<!proto.electrious.models.house.HouseSearch>} */ (
    jspb.Message.getRepeatedWrapperField(this, electrious_models_house_house_pb.HouseSearch, 1));
};


/** @param {!Array<!proto.electrious.models.house.HouseSearch>} value */
proto.electrious.api.v1.SearchHousesResponse.prototype.setHousesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.electrious.models.house.HouseSearch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.electrious.models.house.HouseSearch}
 */
proto.electrious.api.v1.SearchHousesResponse.prototype.addHouses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.electrious.models.house.HouseSearch, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.electrious.api.v1.SearchHousesResponse.prototype.clearHousesList = function() {
  this.setHousesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.CreateHouseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.CreateHouseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.CreateHouseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.CreateHouseRequest.toObject = function(includeInstance, msg) {
  var obj = {
    latlng: (f = msg.getLatlng()) && electrious_models_geometry_latlng_pb.LatLng.toObject(includeInstance, f),
    diameter: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.CreateHouseRequest}
 */
proto.electrious.api.v1.CreateHouseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.CreateHouseRequest;
  return proto.electrious.api.v1.CreateHouseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.CreateHouseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.CreateHouseRequest}
 */
proto.electrious.api.v1.CreateHouseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_geometry_latlng_pb.LatLng;
      reader.readMessage(value,electrious_models_geometry_latlng_pb.LatLng.deserializeBinaryFromReader);
      msg.setLatlng(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDiameter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.CreateHouseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.CreateHouseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.CreateHouseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.CreateHouseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatlng();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_models_geometry_latlng_pb.LatLng.serializeBinaryToWriter
    );
  }
  f = message.getDiameter();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional electrious.models.geometry.LatLng latlng = 1;
 * @return {?proto.electrious.models.geometry.LatLng}
 */
proto.electrious.api.v1.CreateHouseRequest.prototype.getLatlng = function() {
  return /** @type{?proto.electrious.models.geometry.LatLng} */ (
    jspb.Message.getWrapperField(this, electrious_models_geometry_latlng_pb.LatLng, 1));
};


/** @param {?proto.electrious.models.geometry.LatLng|undefined} value */
proto.electrious.api.v1.CreateHouseRequest.prototype.setLatlng = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.CreateHouseRequest.prototype.clearLatlng = function() {
  this.setLatlng(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.CreateHouseRequest.prototype.hasLatlng = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float diameter = 2;
 * @return {number}
 */
proto.electrious.api.v1.CreateHouseRequest.prototype.getDiameter = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.electrious.api.v1.CreateHouseRequest.prototype.setDiameter = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.CreateHouseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.CreateHouseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.CreateHouseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.CreateHouseResponse.toObject = function(includeInstance, msg) {
  var obj = {
    house: (f = msg.getHouse()) && electrious_models_house_house_pb.House.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.CreateHouseResponse}
 */
proto.electrious.api.v1.CreateHouseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.CreateHouseResponse;
  return proto.electrious.api.v1.CreateHouseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.CreateHouseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.CreateHouseResponse}
 */
proto.electrious.api.v1.CreateHouseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_house_house_pb.House;
      reader.readMessage(value,electrious_models_house_house_pb.House.deserializeBinaryFromReader);
      msg.setHouse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.CreateHouseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.CreateHouseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.CreateHouseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.CreateHouseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_models_house_house_pb.House.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.models.house.House house = 1;
 * @return {?proto.electrious.models.house.House}
 */
proto.electrious.api.v1.CreateHouseResponse.prototype.getHouse = function() {
  return /** @type{?proto.electrious.models.house.House} */ (
    jspb.Message.getWrapperField(this, electrious_models_house_house_pb.House, 1));
};


/** @param {?proto.electrious.models.house.House|undefined} value */
proto.electrious.api.v1.CreateHouseResponse.prototype.setHouse = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.CreateHouseResponse.prototype.clearHouse = function() {
  this.setHouse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.CreateHouseResponse.prototype.hasHouse = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.electrious.api.v1);
