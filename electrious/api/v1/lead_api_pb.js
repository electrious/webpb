/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var electrious_models_lead_pb = require('../../../electrious/models/lead_pb.js');
goog.object.extend(proto, electrious_models_lead_pb);
var electrious_models_lead_build_pb = require('../../../electrious/models/lead/build_pb.js');
goog.object.extend(proto, electrious_models_lead_build_pb);
goog.exportSymbol('proto.electrious.api.v1.CreateLeadRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.CreateLeadResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.DeleteByHouseIDRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.DeleteByHouseIDResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.ListLeadsByAddressRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.ListLeadsByAddressResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.ListLeadsByHouseIDRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.ListLeadsByHouseIDResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.SubscribeLeadBuildRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.SubscribeLeadBuildResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.CreateLeadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.CreateLeadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.CreateLeadRequest.displayName = 'proto.electrious.api.v1.CreateLeadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.CreateLeadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.CreateLeadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.CreateLeadResponse.displayName = 'proto.electrious.api.v1.CreateLeadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.SubscribeLeadBuildRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.SubscribeLeadBuildRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.SubscribeLeadBuildRequest.displayName = 'proto.electrious.api.v1.SubscribeLeadBuildRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.SubscribeLeadBuildResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.SubscribeLeadBuildResponse.displayName = 'proto.electrious.api.v1.SubscribeLeadBuildResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.DeleteByHouseIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.DeleteByHouseIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.DeleteByHouseIDRequest.displayName = 'proto.electrious.api.v1.DeleteByHouseIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.DeleteByHouseIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.DeleteByHouseIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.DeleteByHouseIDResponse.displayName = 'proto.electrious.api.v1.DeleteByHouseIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.ListLeadsByHouseIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.ListLeadsByHouseIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.ListLeadsByHouseIDRequest.displayName = 'proto.electrious.api.v1.ListLeadsByHouseIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.electrious.api.v1.ListLeadsByHouseIDResponse.repeatedFields_, null);
};
goog.inherits(proto.electrious.api.v1.ListLeadsByHouseIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.ListLeadsByHouseIDResponse.displayName = 'proto.electrious.api.v1.ListLeadsByHouseIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.ListLeadsByAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.ListLeadsByAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.ListLeadsByAddressRequest.displayName = 'proto.electrious.api.v1.ListLeadsByAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.ListLeadsByAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.electrious.api.v1.ListLeadsByAddressResponse.repeatedFields_, null);
};
goog.inherits(proto.electrious.api.v1.ListLeadsByAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.ListLeadsByAddressResponse.displayName = 'proto.electrious.api.v1.ListLeadsByAddressResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.CreateLeadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.CreateLeadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.CreateLeadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.CreateLeadRequest.toObject = function(includeInstance, msg) {
  var obj = {
    houseId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.CreateLeadRequest}
 */
proto.electrious.api.v1.CreateLeadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.CreateLeadRequest;
  return proto.electrious.api.v1.CreateLeadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.CreateLeadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.CreateLeadRequest}
 */
proto.electrious.api.v1.CreateLeadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHouseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.CreateLeadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.CreateLeadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.CreateLeadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.CreateLeadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouseId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 house_id = 1;
 * @return {number}
 */
proto.electrious.api.v1.CreateLeadRequest.prototype.getHouseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.electrious.api.v1.CreateLeadRequest.prototype.setHouseId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.CreateLeadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.CreateLeadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.CreateLeadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.CreateLeadResponse.toObject = function(includeInstance, msg) {
  var obj = {
    lead: (f = msg.getLead()) && electrious_models_lead_pb.Lead.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.CreateLeadResponse}
 */
proto.electrious.api.v1.CreateLeadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.CreateLeadResponse;
  return proto.electrious.api.v1.CreateLeadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.CreateLeadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.CreateLeadResponse}
 */
proto.electrious.api.v1.CreateLeadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_lead_pb.Lead;
      reader.readMessage(value,electrious_models_lead_pb.Lead.deserializeBinaryFromReader);
      msg.setLead(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.CreateLeadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.CreateLeadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.CreateLeadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.CreateLeadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_models_lead_pb.Lead.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.models.Lead lead = 1;
 * @return {?proto.electrious.models.Lead}
 */
proto.electrious.api.v1.CreateLeadResponse.prototype.getLead = function() {
  return /** @type{?proto.electrious.models.Lead} */ (
    jspb.Message.getWrapperField(this, electrious_models_lead_pb.Lead, 1));
};


/** @param {?proto.electrious.models.Lead|undefined} value */
proto.electrious.api.v1.CreateLeadResponse.prototype.setLead = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.CreateLeadResponse.prototype.clearLead = function() {
  this.setLead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.CreateLeadResponse.prototype.hasLead = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.SubscribeLeadBuildRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.SubscribeLeadBuildRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.SubscribeLeadBuildRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.SubscribeLeadBuildRequest.toObject = function(includeInstance, msg) {
  var obj = {
    houseId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.SubscribeLeadBuildRequest}
 */
proto.electrious.api.v1.SubscribeLeadBuildRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.SubscribeLeadBuildRequest;
  return proto.electrious.api.v1.SubscribeLeadBuildRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.SubscribeLeadBuildRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.SubscribeLeadBuildRequest}
 */
proto.electrious.api.v1.SubscribeLeadBuildRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHouseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.SubscribeLeadBuildRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.SubscribeLeadBuildRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.SubscribeLeadBuildRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.SubscribeLeadBuildRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouseId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 house_id = 1;
 * @return {number}
 */
proto.electrious.api.v1.SubscribeLeadBuildRequest.prototype.getHouseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.electrious.api.v1.SubscribeLeadBuildRequest.prototype.setHouseId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.SubscribeLeadBuildResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.SubscribeLeadBuildResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.toObject = function(includeInstance, msg) {
  var obj = {
    build: (f = msg.getBuild()) && electrious_models_lead_build_pb.Build.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.SubscribeLeadBuildResponse}
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.SubscribeLeadBuildResponse;
  return proto.electrious.api.v1.SubscribeLeadBuildResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.SubscribeLeadBuildResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.SubscribeLeadBuildResponse}
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_lead_build_pb.Build;
      reader.readMessage(value,electrious_models_lead_build_pb.Build.deserializeBinaryFromReader);
      msg.setBuild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.SubscribeLeadBuildResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.SubscribeLeadBuildResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuild();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_models_lead_build_pb.Build.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.models.lead.Build build = 1;
 * @return {?proto.electrious.models.lead.Build}
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.prototype.getBuild = function() {
  return /** @type{?proto.electrious.models.lead.Build} */ (
    jspb.Message.getWrapperField(this, electrious_models_lead_build_pb.Build, 1));
};


/** @param {?proto.electrious.models.lead.Build|undefined} value */
proto.electrious.api.v1.SubscribeLeadBuildResponse.prototype.setBuild = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.prototype.clearBuild = function() {
  this.setBuild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.SubscribeLeadBuildResponse.prototype.hasBuild = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.DeleteByHouseIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.DeleteByHouseIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.DeleteByHouseIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DeleteByHouseIDRequest.toObject = function(includeInstance, msg) {
  var obj = {
    houseId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.DeleteByHouseIDRequest}
 */
proto.electrious.api.v1.DeleteByHouseIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.DeleteByHouseIDRequest;
  return proto.electrious.api.v1.DeleteByHouseIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.DeleteByHouseIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.DeleteByHouseIDRequest}
 */
proto.electrious.api.v1.DeleteByHouseIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHouseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.DeleteByHouseIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.DeleteByHouseIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.DeleteByHouseIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DeleteByHouseIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouseId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 house_id = 1;
 * @return {number}
 */
proto.electrious.api.v1.DeleteByHouseIDRequest.prototype.getHouseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.electrious.api.v1.DeleteByHouseIDRequest.prototype.setHouseId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.DeleteByHouseIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.DeleteByHouseIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.DeleteByHouseIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DeleteByHouseIDResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.DeleteByHouseIDResponse}
 */
proto.electrious.api.v1.DeleteByHouseIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.DeleteByHouseIDResponse;
  return proto.electrious.api.v1.DeleteByHouseIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.DeleteByHouseIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.DeleteByHouseIDResponse}
 */
proto.electrious.api.v1.DeleteByHouseIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.DeleteByHouseIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.DeleteByHouseIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.DeleteByHouseIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.DeleteByHouseIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.ListLeadsByHouseIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.ListLeadsByHouseIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.ListLeadsByHouseIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListLeadsByHouseIDRequest.toObject = function(includeInstance, msg) {
  var obj = {
    houseId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.ListLeadsByHouseIDRequest}
 */
proto.electrious.api.v1.ListLeadsByHouseIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.ListLeadsByHouseIDRequest;
  return proto.electrious.api.v1.ListLeadsByHouseIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.ListLeadsByHouseIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.ListLeadsByHouseIDRequest}
 */
proto.electrious.api.v1.ListLeadsByHouseIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHouseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.ListLeadsByHouseIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.ListLeadsByHouseIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.ListLeadsByHouseIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListLeadsByHouseIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouseId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 house_id = 1;
 * @return {number}
 */
proto.electrious.api.v1.ListLeadsByHouseIDRequest.prototype.getHouseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.electrious.api.v1.ListLeadsByHouseIDRequest.prototype.setHouseId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.ListLeadsByHouseIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.ListLeadsByHouseIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.toObject = function(includeInstance, msg) {
  var obj = {
    leadsList: jspb.Message.toObjectList(msg.getLeadsList(),
    electrious_models_lead_pb.Lead.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.ListLeadsByHouseIDResponse}
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.ListLeadsByHouseIDResponse;
  return proto.electrious.api.v1.ListLeadsByHouseIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.ListLeadsByHouseIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.ListLeadsByHouseIDResponse}
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_lead_pb.Lead;
      reader.readMessage(value,electrious_models_lead_pb.Lead.deserializeBinaryFromReader);
      msg.addLeads(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.ListLeadsByHouseIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.ListLeadsByHouseIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      electrious_models_lead_pb.Lead.serializeBinaryToWriter
    );
  }
};


/**
 * repeated electrious.models.Lead leads = 1;
 * @return {!Array<!proto.electrious.models.Lead>}
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.prototype.getLeadsList = function() {
  return /** @type{!Array<!proto.electrious.models.Lead>} */ (
    jspb.Message.getRepeatedWrapperField(this, electrious_models_lead_pb.Lead, 1));
};


/** @param {!Array<!proto.electrious.models.Lead>} value */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.prototype.setLeadsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.electrious.models.Lead=} opt_value
 * @param {number=} opt_index
 * @return {!proto.electrious.models.Lead}
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.prototype.addLeads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.electrious.models.Lead, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.electrious.api.v1.ListLeadsByHouseIDResponse.prototype.clearLeadsList = function() {
  this.setLeadsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.ListLeadsByAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.ListLeadsByAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.ListLeadsByAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListLeadsByAddressRequest.toObject = function(includeInstance, msg) {
  var obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.ListLeadsByAddressRequest}
 */
proto.electrious.api.v1.ListLeadsByAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.ListLeadsByAddressRequest;
  return proto.electrious.api.v1.ListLeadsByAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.ListLeadsByAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.ListLeadsByAddressRequest}
 */
proto.electrious.api.v1.ListLeadsByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.ListLeadsByAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.ListLeadsByAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.ListLeadsByAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListLeadsByAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.electrious.api.v1.ListLeadsByAddressRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.electrious.api.v1.ListLeadsByAddressRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.ListLeadsByAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.ListLeadsByAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.toObject = function(includeInstance, msg) {
  var obj = {
    leadsList: jspb.Message.toObjectList(msg.getLeadsList(),
    electrious_models_lead_pb.LeadAddress.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.ListLeadsByAddressResponse}
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.ListLeadsByAddressResponse;
  return proto.electrious.api.v1.ListLeadsByAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.ListLeadsByAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.ListLeadsByAddressResponse}
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_models_lead_pb.LeadAddress;
      reader.readMessage(value,electrious_models_lead_pb.LeadAddress.deserializeBinaryFromReader);
      msg.addLeads(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.ListLeadsByAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.ListLeadsByAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      electrious_models_lead_pb.LeadAddress.serializeBinaryToWriter
    );
  }
};


/**
 * repeated electrious.models.LeadAddress leads = 1;
 * @return {!Array<!proto.electrious.models.LeadAddress>}
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.prototype.getLeadsList = function() {
  return /** @type{!Array<!proto.electrious.models.LeadAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, electrious_models_lead_pb.LeadAddress, 1));
};


/** @param {!Array<!proto.electrious.models.LeadAddress>} value */
proto.electrious.api.v1.ListLeadsByAddressResponse.prototype.setLeadsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.electrious.models.LeadAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.electrious.models.LeadAddress}
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.prototype.addLeads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.electrious.models.LeadAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.electrious.api.v1.ListLeadsByAddressResponse.prototype.clearLeadsList = function() {
  this.setLeadsList([]);
};


goog.object.extend(exports, proto.electrious.api.v1);
