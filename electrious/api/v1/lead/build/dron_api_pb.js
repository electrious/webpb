/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var electrious_models_file_pb = require('../../../../../electrious/models/file_pb.js');
goog.object.extend(proto, electrious_models_file_pb);
var electrious_uuid_pb = require('../../../../../electrious/uuid_pb.js');
goog.object.extend(proto, electrious_uuid_pb);
goog.exportSymbol('proto.electrious.api.v1.lead.build.CreateDronBuildRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.lead.build.CreateDronBuildResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse', null, global);
goog.exportSymbol('proto.electrious.api.v1.lead.build.UploadDronImageRequest', null, global);
goog.exportSymbol('proto.electrious.api.v1.lead.build.UploadDronImageResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.displayName = 'proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.displayName = 'proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.lead.build.UploadDronImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.lead.build.UploadDronImageRequest.displayName = 'proto.electrious.api.v1.lead.build.UploadDronImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.lead.build.UploadDronImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.lead.build.UploadDronImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.lead.build.UploadDronImageResponse.displayName = 'proto.electrious.api.v1.lead.build.UploadDronImageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.lead.build.CreateDronBuildRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.lead.build.CreateDronBuildRequest.displayName = 'proto.electrious.api.v1.lead.build.CreateDronBuildRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.api.v1.lead.build.CreateDronBuildResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.api.v1.lead.build.CreateDronBuildResponse.displayName = 'proto.electrious.api.v1.lead.build.CreateDronBuildResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest;
  return proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && electrious_uuid_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse;
  return proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_uuid_pb.UUID;
      reader.readMessage(value,electrious_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.UUID uuid = 1;
 * @return {?proto.electrious.UUID}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.prototype.getUuid = function() {
  return /** @type{?proto.electrious.UUID} */ (
    jspb.Message.getWrapperField(this, electrious_uuid_pb.UUID, 1));
};


/** @param {?proto.electrious.UUID|undefined} value */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.lead.build.CreateDronImageGroupResponse.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.lead.build.UploadDronImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.lead.build.UploadDronImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && electrious_uuid_pb.UUID.toObject(includeInstance, f),
    image: (f = msg.getImage()) && electrious_models_file_pb.File.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.lead.build.UploadDronImageRequest}
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.lead.build.UploadDronImageRequest;
  return proto.electrious.api.v1.lead.build.UploadDronImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.lead.build.UploadDronImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.lead.build.UploadDronImageRequest}
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_uuid_pb.UUID;
      reader.readMessage(value,electrious_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = new electrious_models_file_pb.File;
      reader.readMessage(value,electrious_models_file_pb.File.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.lead.build.UploadDronImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.lead.build.UploadDronImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      electrious_models_file_pb.File.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.UUID uuid = 1;
 * @return {?proto.electrious.UUID}
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.getUuid = function() {
  return /** @type{?proto.electrious.UUID} */ (
    jspb.Message.getWrapperField(this, electrious_uuid_pb.UUID, 1));
};


/** @param {?proto.electrious.UUID|undefined} value */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional electrious.models.File image = 2;
 * @return {?proto.electrious.models.File}
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.getImage = function() {
  return /** @type{?proto.electrious.models.File} */ (
    jspb.Message.getWrapperField(this, electrious_models_file_pb.File, 2));
};


/** @param {?proto.electrious.models.File|undefined} value */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.setImage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.clearImage = function() {
  this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.lead.build.UploadDronImageRequest.prototype.hasImage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.lead.build.UploadDronImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.lead.build.UploadDronImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.lead.build.UploadDronImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.UploadDronImageResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.lead.build.UploadDronImageResponse}
 */
proto.electrious.api.v1.lead.build.UploadDronImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.lead.build.UploadDronImageResponse;
  return proto.electrious.api.v1.lead.build.UploadDronImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.lead.build.UploadDronImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.lead.build.UploadDronImageResponse}
 */
proto.electrious.api.v1.lead.build.UploadDronImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.lead.build.UploadDronImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.lead.build.UploadDronImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.lead.build.UploadDronImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.UploadDronImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.lead.build.CreateDronBuildRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.lead.build.CreateDronBuildRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && electrious_uuid_pb.UUID.toObject(includeInstance, f),
    houseId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.lead.build.CreateDronBuildRequest}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.lead.build.CreateDronBuildRequest;
  return proto.electrious.api.v1.lead.build.CreateDronBuildRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.lead.build.CreateDronBuildRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.lead.build.CreateDronBuildRequest}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_uuid_pb.UUID;
      reader.readMessage(value,electrious_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHouseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.lead.build.CreateDronBuildRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.lead.build.CreateDronBuildRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getHouseId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional electrious.UUID uuid = 1;
 * @return {?proto.electrious.UUID}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.prototype.getUuid = function() {
  return /** @type{?proto.electrious.UUID} */ (
    jspb.Message.getWrapperField(this, electrious_uuid_pb.UUID, 1));
};


/** @param {?proto.electrious.UUID|undefined} value */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 house_id = 2;
 * @return {number}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.prototype.getHouseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.electrious.api.v1.lead.build.CreateDronBuildRequest.prototype.setHouseId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.api.v1.lead.build.CreateDronBuildResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.api.v1.lead.build.CreateDronBuildResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && electrious_uuid_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.api.v1.lead.build.CreateDronBuildResponse}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.api.v1.lead.build.CreateDronBuildResponse;
  return proto.electrious.api.v1.lead.build.CreateDronBuildResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.api.v1.lead.build.CreateDronBuildResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.api.v1.lead.build.CreateDronBuildResponse}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new electrious_uuid_pb.UUID;
      reader.readMessage(value,electrious_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.api.v1.lead.build.CreateDronBuildResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.api.v1.lead.build.CreateDronBuildResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      electrious_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional electrious.UUID uuid = 1;
 * @return {?proto.electrious.UUID}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.prototype.getUuid = function() {
  return /** @type{?proto.electrious.UUID} */ (
    jspb.Message.getWrapperField(this, electrious_uuid_pb.UUID, 1));
};


/** @param {?proto.electrious.UUID|undefined} value */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.api.v1.lead.build.CreateDronBuildResponse.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.electrious.api.v1.lead.build);
