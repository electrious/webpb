/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.electrious.models.Panel', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.models.Panel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.models.Panel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.models.Panel.displayName = 'proto.electrious.models.Panel';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.models.Panel.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.models.Panel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.models.Panel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.Panel.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    manufacturer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bipv: jspb.Message.getFieldWithDefault(msg, 4, false),
    sizeShort: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    sizeLong: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    tNoct: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    aC: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    nS: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    iScRef: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    vOcRef: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    iMpRef: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
    vMpRef: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    alphaSc: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
    betaOc: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    aRef: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
    iLRef: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    iORef: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
    rS: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
    rShRef: +jspb.Message.getFieldWithDefault(msg, 20, 0.0),
    gammaR: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
    adjust: +jspb.Message.getFieldWithDefault(msg, 22, 0.0),
    version: jspb.Message.getFieldWithDefault(msg, 23, ""),
    ptc: +jspb.Message.getFieldWithDefault(msg, 24, 0.0),
    technology: jspb.Message.getFieldWithDefault(msg, 25, ""),
    yearApprovedAt: jspb.Message.getFieldWithDefault(msg, 26, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.models.Panel}
 */
proto.electrious.models.Panel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.models.Panel;
  return proto.electrious.models.Panel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.models.Panel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.models.Panel}
 */
proto.electrious.models.Panel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setManufacturer(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBipv(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSizeShort(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSizeLong(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTNoct(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAC(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNS(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setIScRef(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVOcRef(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setIMpRef(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVMpRef(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAlphaSc(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBetaOc(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setARef(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setILRef(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setIORef(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRS(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRShRef(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGammaR(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAdjust(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPtc(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setTechnology(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYearApprovedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.models.Panel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.models.Panel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.models.Panel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.Panel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getManufacturer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBipv();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSizeShort();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getSizeLong();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getTNoct();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getAC();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getNS();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getIScRef();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getVOcRef();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getIMpRef();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getVMpRef();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getAlphaSc();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getBetaOc();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getARef();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getILRef();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getIORef();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getRS();
  if (f !== 0.0) {
    writer.writeFloat(
      19,
      f
    );
  }
  f = message.getRShRef();
  if (f !== 0.0) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = message.getGammaR();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = message.getAdjust();
  if (f !== 0.0) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getPtc();
  if (f !== 0.0) {
    writer.writeFloat(
      24,
      f
    );
  }
  f = message.getTechnology();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getYearApprovedAt();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.electrious.models.Panel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.electrious.models.Panel.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string manufacturer = 3;
 * @return {string}
 */
proto.electrious.models.Panel.prototype.getManufacturer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.electrious.models.Panel.prototype.setManufacturer = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool bipv = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.electrious.models.Panel.prototype.getBipv = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.electrious.models.Panel.prototype.setBipv = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional float size_short = 5;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getSizeShort = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setSizeShort = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float size_long = 6;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getSizeLong = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setSizeLong = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float t_noct = 7;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getTNoct = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setTNoct = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float a_c = 8;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getAC = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setAC = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float n_s = 9;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getNS = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setNS = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float i_sc_ref = 10;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getIScRef = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setIScRef = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float v_oc_ref = 11;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getVOcRef = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setVOcRef = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float i_mp_ref = 12;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getIMpRef = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setIMpRef = function(value) {
  jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float v_mp_ref = 13;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getVMpRef = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setVMpRef = function(value) {
  jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float alpha_sc = 14;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getAlphaSc = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setAlphaSc = function(value) {
  jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float beta_oc = 15;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getBetaOc = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setBetaOc = function(value) {
  jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float a_ref = 16;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getARef = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setARef = function(value) {
  jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float i_l_ref = 17;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getILRef = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setILRef = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float i_o_ref = 18;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getIORef = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setIORef = function(value) {
  jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional float r_s = 19;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getRS = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setRS = function(value) {
  jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional float r_sh_ref = 20;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getRShRef = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setRShRef = function(value) {
  jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional float gamma_r = 21;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getGammaR = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setGammaR = function(value) {
  jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional float adjust = 22;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getAdjust = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setAdjust = function(value) {
  jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional string version = 23;
 * @return {string}
 */
proto.electrious.models.Panel.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.electrious.models.Panel.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional float ptc = 24;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getPtc = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 24, 0.0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setPtc = function(value) {
  jspb.Message.setProto3FloatField(this, 24, value);
};


/**
 * optional string technology = 25;
 * @return {string}
 */
proto.electrious.models.Panel.prototype.getTechnology = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.electrious.models.Panel.prototype.setTechnology = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional int32 year_approved_at = 26;
 * @return {number}
 */
proto.electrious.models.Panel.prototype.getYearApprovedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.electrious.models.Panel.prototype.setYearApprovedAt = function(value) {
  jspb.Message.setProto3IntField(this, 26, value);
};


goog.object.extend(exports, proto.electrious.models);
