/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.electrious.models.Inverter', null, global);
goog.exportSymbol('proto.electrious.models.Inverter.InverterKind', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.models.Inverter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.models.Inverter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.models.Inverter.displayName = 'proto.electrious.models.Inverter';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.models.Inverter.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.models.Inverter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.models.Inverter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.Inverter.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    manufacturer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 4, 0),
    vac: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    paco: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    pdco: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    vdco: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    pso: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    pnt: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    c0: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    c1: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
    c2: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    c3: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
    vdcmax: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    idcmax: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
    mpptLow: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    mpptHigh: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
    yearApprovedAt: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.models.Inverter}
 */
proto.electrious.models.Inverter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.models.Inverter;
  return proto.electrious.models.Inverter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.models.Inverter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.models.Inverter}
 */
proto.electrious.models.Inverter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setManufacturer(value);
      break;
    case 4:
      var value = /** @type {!proto.electrious.models.Inverter.InverterKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVac(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaco(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPdco(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVdco(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPso(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPnt(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setC0(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setC1(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setC2(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setC3(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVdcmax(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setIdcmax(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMpptLow(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMpptHigh(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYearApprovedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.models.Inverter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.models.Inverter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.models.Inverter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.Inverter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getManufacturer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getVac();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getPaco();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getPdco();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getVdco();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getPso();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getPnt();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getC0();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getC1();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getC2();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getC3();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getVdcmax();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getIdcmax();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getMpptLow();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getMpptHigh();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getYearApprovedAt();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.electrious.models.Inverter.InverterKind = {
  INVERTER_KIND_INVALID: 0,
  INVERTER_KIND_STRING: 1,
  INVERTER_KIND_MICRO: 2
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.electrious.models.Inverter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.electrious.models.Inverter.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string manufacturer = 3;
 * @return {string}
 */
proto.electrious.models.Inverter.prototype.getManufacturer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.electrious.models.Inverter.prototype.setManufacturer = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional InverterKind kind = 4;
 * @return {!proto.electrious.models.Inverter.InverterKind}
 */
proto.electrious.models.Inverter.prototype.getKind = function() {
  return /** @type {!proto.electrious.models.Inverter.InverterKind} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.electrious.models.Inverter.InverterKind} value */
proto.electrious.models.Inverter.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional float vac = 5;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getVac = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setVac = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float paco = 6;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getPaco = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setPaco = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float pdco = 7;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getPdco = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setPdco = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float vdco = 8;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getVdco = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setVdco = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float pso = 9;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getPso = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setPso = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float pnt = 10;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getPnt = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setPnt = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float c0 = 11;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getC0 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setC0 = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float c1 = 12;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getC1 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setC1 = function(value) {
  jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float c2 = 13;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getC2 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setC2 = function(value) {
  jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float c3 = 14;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getC3 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setC3 = function(value) {
  jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float vdcmax = 15;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getVdcmax = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setVdcmax = function(value) {
  jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float idcmax = 16;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getIdcmax = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setIdcmax = function(value) {
  jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float mppt_low = 17;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getMpptLow = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setMpptLow = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float mppt_high = 18;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getMpptHigh = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setMpptHigh = function(value) {
  jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional int32 year_approved_at = 19;
 * @return {number}
 */
proto.electrious.models.Inverter.prototype.getYearApprovedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.electrious.models.Inverter.prototype.setYearApprovedAt = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


goog.object.extend(exports, proto.electrious.models);
