/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var electrious_models_racking_chassis_pb = require('../../../electrious/models/racking/chassis_pb.js');
goog.object.extend(proto, electrious_models_racking_chassis_pb);
var electrious_models_racking_mount_pb = require('../../../electrious/models/racking/mount_pb.js');
goog.object.extend(proto, electrious_models_racking_mount_pb);
var electrious_models_racking_rafter_pb = require('../../../electrious/models/racking/rafter_pb.js');
goog.object.extend(proto, electrious_models_racking_rafter_pb);
goog.exportSymbol('proto.electrious.models.racking.BXParameter', null, global);
goog.exportSymbol('proto.electrious.models.racking.FXParameter', null, global);
goog.exportSymbol('proto.electrious.models.racking.GAFParameter', null, global);
goog.exportSymbol('proto.electrious.models.racking.RoofParameter', null, global);
goog.exportSymbol('proto.electrious.models.racking.XRFlatParameter', null, global);
goog.exportSymbol('proto.electrious.models.racking.XRParameter', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.models.racking.RoofParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.electrious.models.racking.RoofParameter.oneofGroups_);
};
goog.inherits(proto.electrious.models.racking.RoofParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.models.racking.RoofParameter.displayName = 'proto.electrious.models.racking.RoofParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.models.racking.XRParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.models.racking.XRParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.models.racking.XRParameter.displayName = 'proto.electrious.models.racking.XRParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.models.racking.FXParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.models.racking.FXParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.models.racking.FXParameter.displayName = 'proto.electrious.models.racking.FXParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.models.racking.XRFlatParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.models.racking.XRFlatParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.models.racking.XRFlatParameter.displayName = 'proto.electrious.models.racking.XRFlatParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.models.racking.BXParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.models.racking.BXParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.models.racking.BXParameter.displayName = 'proto.electrious.models.racking.BXParameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.electrious.models.racking.GAFParameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.electrious.models.racking.GAFParameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.electrious.models.racking.GAFParameter.displayName = 'proto.electrious.models.racking.GAFParameter';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.electrious.models.racking.RoofParameter.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.electrious.models.racking.RoofParameter.ParamTypeCase = {
  PARAM_TYPE_NOT_SET: 0,
  XR_PARAM: 1,
  FX_PARAM: 2,
  XR_FLAT_PARAM: 3,
  BX_PARAM: 4,
  GAF_PARAM: 5
};

/**
 * @return {proto.electrious.models.racking.RoofParameter.ParamTypeCase}
 */
proto.electrious.models.racking.RoofParameter.prototype.getParamTypeCase = function() {
  return /** @type {proto.electrious.models.racking.RoofParameter.ParamTypeCase} */(jspb.Message.computeOneofCase(this, proto.electrious.models.racking.RoofParameter.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.models.racking.RoofParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.models.racking.RoofParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.models.racking.RoofParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.RoofParameter.toObject = function(includeInstance, msg) {
  var obj = {
    xrParam: (f = msg.getXrParam()) && proto.electrious.models.racking.XRParameter.toObject(includeInstance, f),
    fxParam: (f = msg.getFxParam()) && proto.electrious.models.racking.FXParameter.toObject(includeInstance, f),
    xrFlatParam: (f = msg.getXrFlatParam()) && proto.electrious.models.racking.XRFlatParameter.toObject(includeInstance, f),
    bxParam: (f = msg.getBxParam()) && proto.electrious.models.racking.BXParameter.toObject(includeInstance, f),
    gafParam: (f = msg.getGafParam()) && proto.electrious.models.racking.GAFParameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.models.racking.RoofParameter}
 */
proto.electrious.models.racking.RoofParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.models.racking.RoofParameter;
  return proto.electrious.models.racking.RoofParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.models.racking.RoofParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.models.racking.RoofParameter}
 */
proto.electrious.models.racking.RoofParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.electrious.models.racking.XRParameter;
      reader.readMessage(value,proto.electrious.models.racking.XRParameter.deserializeBinaryFromReader);
      msg.setXrParam(value);
      break;
    case 2:
      var value = new proto.electrious.models.racking.FXParameter;
      reader.readMessage(value,proto.electrious.models.racking.FXParameter.deserializeBinaryFromReader);
      msg.setFxParam(value);
      break;
    case 3:
      var value = new proto.electrious.models.racking.XRFlatParameter;
      reader.readMessage(value,proto.electrious.models.racking.XRFlatParameter.deserializeBinaryFromReader);
      msg.setXrFlatParam(value);
      break;
    case 4:
      var value = new proto.electrious.models.racking.BXParameter;
      reader.readMessage(value,proto.electrious.models.racking.BXParameter.deserializeBinaryFromReader);
      msg.setBxParam(value);
      break;
    case 5:
      var value = new proto.electrious.models.racking.GAFParameter;
      reader.readMessage(value,proto.electrious.models.racking.GAFParameter.deserializeBinaryFromReader);
      msg.setGafParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.models.racking.RoofParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.models.racking.RoofParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.models.racking.RoofParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.RoofParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXrParam();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.electrious.models.racking.XRParameter.serializeBinaryToWriter
    );
  }
  f = message.getFxParam();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.electrious.models.racking.FXParameter.serializeBinaryToWriter
    );
  }
  f = message.getXrFlatParam();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.electrious.models.racking.XRFlatParameter.serializeBinaryToWriter
    );
  }
  f = message.getBxParam();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.electrious.models.racking.BXParameter.serializeBinaryToWriter
    );
  }
  f = message.getGafParam();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.electrious.models.racking.GAFParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional XRParameter xr_param = 1;
 * @return {?proto.electrious.models.racking.XRParameter}
 */
proto.electrious.models.racking.RoofParameter.prototype.getXrParam = function() {
  return /** @type{?proto.electrious.models.racking.XRParameter} */ (
    jspb.Message.getWrapperField(this, proto.electrious.models.racking.XRParameter, 1));
};


/** @param {?proto.electrious.models.racking.XRParameter|undefined} value */
proto.electrious.models.racking.RoofParameter.prototype.setXrParam = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.electrious.models.racking.RoofParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.models.racking.RoofParameter.prototype.clearXrParam = function() {
  this.setXrParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.models.racking.RoofParameter.prototype.hasXrParam = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FXParameter fx_param = 2;
 * @return {?proto.electrious.models.racking.FXParameter}
 */
proto.electrious.models.racking.RoofParameter.prototype.getFxParam = function() {
  return /** @type{?proto.electrious.models.racking.FXParameter} */ (
    jspb.Message.getWrapperField(this, proto.electrious.models.racking.FXParameter, 2));
};


/** @param {?proto.electrious.models.racking.FXParameter|undefined} value */
proto.electrious.models.racking.RoofParameter.prototype.setFxParam = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.electrious.models.racking.RoofParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.models.racking.RoofParameter.prototype.clearFxParam = function() {
  this.setFxParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.models.racking.RoofParameter.prototype.hasFxParam = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional XRFlatParameter xr_flat_param = 3;
 * @return {?proto.electrious.models.racking.XRFlatParameter}
 */
proto.electrious.models.racking.RoofParameter.prototype.getXrFlatParam = function() {
  return /** @type{?proto.electrious.models.racking.XRFlatParameter} */ (
    jspb.Message.getWrapperField(this, proto.electrious.models.racking.XRFlatParameter, 3));
};


/** @param {?proto.electrious.models.racking.XRFlatParameter|undefined} value */
proto.electrious.models.racking.RoofParameter.prototype.setXrFlatParam = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.electrious.models.racking.RoofParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.models.racking.RoofParameter.prototype.clearXrFlatParam = function() {
  this.setXrFlatParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.models.racking.RoofParameter.prototype.hasXrFlatParam = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BXParameter bx_param = 4;
 * @return {?proto.electrious.models.racking.BXParameter}
 */
proto.electrious.models.racking.RoofParameter.prototype.getBxParam = function() {
  return /** @type{?proto.electrious.models.racking.BXParameter} */ (
    jspb.Message.getWrapperField(this, proto.electrious.models.racking.BXParameter, 4));
};


/** @param {?proto.electrious.models.racking.BXParameter|undefined} value */
proto.electrious.models.racking.RoofParameter.prototype.setBxParam = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.electrious.models.racking.RoofParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.models.racking.RoofParameter.prototype.clearBxParam = function() {
  this.setBxParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.models.racking.RoofParameter.prototype.hasBxParam = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GAFParameter gaf_param = 5;
 * @return {?proto.electrious.models.racking.GAFParameter}
 */
proto.electrious.models.racking.RoofParameter.prototype.getGafParam = function() {
  return /** @type{?proto.electrious.models.racking.GAFParameter} */ (
    jspb.Message.getWrapperField(this, proto.electrious.models.racking.GAFParameter, 5));
};


/** @param {?proto.electrious.models.racking.GAFParameter|undefined} value */
proto.electrious.models.racking.RoofParameter.prototype.setGafParam = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.electrious.models.racking.RoofParameter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.electrious.models.racking.RoofParameter.prototype.clearGafParam = function() {
  this.setGafParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.electrious.models.racking.RoofParameter.prototype.hasGafParam = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.models.racking.XRParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.models.racking.XRParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.models.racking.XRParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.XRParameter.toObject = function(includeInstance, msg) {
  var obj = {
    mountSpace: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rafterSpace: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.models.racking.XRParameter}
 */
proto.electrious.models.racking.XRParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.models.racking.XRParameter;
  return proto.electrious.models.racking.XRParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.models.racking.XRParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.models.racking.XRParameter}
 */
proto.electrious.models.racking.XRParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.electrious.models.racking.Mount.Spacing} */ (reader.readEnum());
      msg.setMountSpace(value);
      break;
    case 2:
      var value = /** @type {!proto.electrious.models.racking.Rafter.Spacing} */ (reader.readEnum());
      msg.setRafterSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.models.racking.XRParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.models.racking.XRParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.models.racking.XRParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.XRParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMountSpace();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRafterSpace();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Mount.Spacing mount_space = 1;
 * @return {!proto.electrious.models.racking.Mount.Spacing}
 */
proto.electrious.models.racking.XRParameter.prototype.getMountSpace = function() {
  return /** @type {!proto.electrious.models.racking.Mount.Spacing} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.electrious.models.racking.Mount.Spacing} value */
proto.electrious.models.racking.XRParameter.prototype.setMountSpace = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Rafter.Spacing rafter_space = 2;
 * @return {!proto.electrious.models.racking.Rafter.Spacing}
 */
proto.electrious.models.racking.XRParameter.prototype.getRafterSpace = function() {
  return /** @type {!proto.electrious.models.racking.Rafter.Spacing} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.electrious.models.racking.Rafter.Spacing} value */
proto.electrious.models.racking.XRParameter.prototype.setRafterSpace = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.models.racking.FXParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.models.racking.FXParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.models.racking.FXParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.FXParameter.toObject = function(includeInstance, msg) {
  var obj = {
    mountSpace: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rafterSpace: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.models.racking.FXParameter}
 */
proto.electrious.models.racking.FXParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.models.racking.FXParameter;
  return proto.electrious.models.racking.FXParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.models.racking.FXParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.models.racking.FXParameter}
 */
proto.electrious.models.racking.FXParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.electrious.models.racking.Mount.Spacing} */ (reader.readEnum());
      msg.setMountSpace(value);
      break;
    case 2:
      var value = /** @type {!proto.electrious.models.racking.Rafter.Spacing} */ (reader.readEnum());
      msg.setRafterSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.models.racking.FXParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.models.racking.FXParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.models.racking.FXParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.FXParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMountSpace();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRafterSpace();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Mount.Spacing mount_space = 1;
 * @return {!proto.electrious.models.racking.Mount.Spacing}
 */
proto.electrious.models.racking.FXParameter.prototype.getMountSpace = function() {
  return /** @type {!proto.electrious.models.racking.Mount.Spacing} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.electrious.models.racking.Mount.Spacing} value */
proto.electrious.models.racking.FXParameter.prototype.setMountSpace = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Rafter.Spacing rafter_space = 2;
 * @return {!proto.electrious.models.racking.Rafter.Spacing}
 */
proto.electrious.models.racking.FXParameter.prototype.getRafterSpace = function() {
  return /** @type {!proto.electrious.models.racking.Rafter.Spacing} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.electrious.models.racking.Rafter.Spacing} value */
proto.electrious.models.racking.FXParameter.prototype.setRafterSpace = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.models.racking.XRFlatParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.models.racking.XRFlatParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.models.racking.XRFlatParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.XRFlatParameter.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.models.racking.XRFlatParameter}
 */
proto.electrious.models.racking.XRFlatParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.models.racking.XRFlatParameter;
  return proto.electrious.models.racking.XRFlatParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.models.racking.XRFlatParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.models.racking.XRFlatParameter}
 */
proto.electrious.models.racking.XRFlatParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.models.racking.XRFlatParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.models.racking.XRFlatParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.models.racking.XRFlatParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.XRFlatParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.models.racking.BXParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.models.racking.BXParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.models.racking.BXParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.BXParameter.toObject = function(includeInstance, msg) {
  var obj = {
    chassisKind: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.models.racking.BXParameter}
 */
proto.electrious.models.racking.BXParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.models.racking.BXParameter;
  return proto.electrious.models.racking.BXParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.models.racking.BXParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.models.racking.BXParameter}
 */
proto.electrious.models.racking.BXParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.electrious.models.racking.Chassis.Kind} */ (reader.readEnum());
      msg.setChassisKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.models.racking.BXParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.models.racking.BXParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.models.racking.BXParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.BXParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChassisKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Chassis.Kind chassis_kind = 1;
 * @return {!proto.electrious.models.racking.Chassis.Kind}
 */
proto.electrious.models.racking.BXParameter.prototype.getChassisKind = function() {
  return /** @type {!proto.electrious.models.racking.Chassis.Kind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.electrious.models.racking.Chassis.Kind} value */
proto.electrious.models.racking.BXParameter.prototype.setChassisKind = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.electrious.models.racking.GAFParameter.prototype.toObject = function(opt_includeInstance) {
  return proto.electrious.models.racking.GAFParameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.electrious.models.racking.GAFParameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.GAFParameter.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.electrious.models.racking.GAFParameter}
 */
proto.electrious.models.racking.GAFParameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.electrious.models.racking.GAFParameter;
  return proto.electrious.models.racking.GAFParameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.electrious.models.racking.GAFParameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.electrious.models.racking.GAFParameter}
 */
proto.electrious.models.racking.GAFParameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.electrious.models.racking.GAFParameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.electrious.models.racking.GAFParameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.electrious.models.racking.GAFParameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.electrious.models.racking.GAFParameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.electrious.models.racking);
